name: pull request checks

on: [pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  check_nextjs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    defaults:
      run:
        working-directory: ./frontend/

    steps:
      - name: checkout the pushed repo
        uses: actions/checkout@v4
        with:
          persist-credentials: 'false'

      - name: setup yarn with cache management
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: ./frontend/yarn.lock

      - name: cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: yarn install

      - name: run eslint
        run: yarn run eslint-check

      - name: run prettier
        run: yarn run prettier-check
          

  check_rails:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.3.2']
    defaults:
      run:
        working-directory: ./backend/
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: project_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
      - name: checkout the pushed repo
        uses: actions/checkout@v4
        with:
          persist-credentials: 'false'

      - name: setup ruby with cache management
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
          working-directory: ./backend/

      - run: bundle exec rubocop

      - name: DB create and migrate
        env:
          RAILS_ENV: test
          APP_DB_HOST: 127.0.0.1
        run: bundle exec rails db:create db:schema:load

      - run: bundle exec rspec